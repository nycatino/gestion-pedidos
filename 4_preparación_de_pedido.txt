Recepción del pedido

Algoritmo
1. Verificar precondiciones
2. Generar picking_list.
3. Estimar tiempo de preparación
4. Actualizar pedido
5. Retornar pedido.prepacion

Nivel 1
1. 1 Hallar pedido
1. 2 Verificar verificacion y estado 
2. 1 Generar picking list
3. 1 Estimar tiempo de preparación
4. 1 Actualizar pedido.preparacion
4. 2 Actualizar pedido.estado
4. 3 Actualizar pedido
5. 1 Retornar pedido.preparacion

Nivel 2
1.1.1 Hallar pedido
1.2.1 Si verificar verficacion.status != OK o pedido.estado != PAGO_APROBADO
    1.2.2 Retornar ERROR
2.1.1 Declarar array picking_list
2.1.2 Por cada item del pedido
    2.1.3 Obtener ubicacion de item
    2.1.4 Agregar al picking_list
    3.1.1 Acumular tiempo estimado
3.1.2 Acumular tiempo estimado empaquetado
4.1.1 Actualizar pedido.estado
4.2.1 Guardar pedido
5.1.1 Retornar order_id a **envío y seguimiento**

Pseudocódigo
FUNCTION preparar_pedido(order_id):
1.1.1    pedido = db_pedidos.obtener_pedido(order_id)
1.2.1    IF pedido.verificacion.status != 'OK' OR pedido.estado != 'PAGO_APROBADO':
1.2.2        RETURN ERROR "Precondiciones no cumplidas"

2.1.1    picking_list = []
???      tiempo_total = 0
2.1.2    FOR item IN pedido.items:
2.1.3        ubicacion = db_inventario.obtener_ubicacion_sku(item.sku)
2.1.4        picking_list.append({'sku': item.sku, 'cantidad': item.cantidad, 'ubicacion': ubicacion})
3.1.1        tiempo_total += 2 * item.cantidad  # minutos por unidad
3.1.2    tiempo_total += 5  # empaquetado
        confirmacion = simular_confirmacion(picking_list)
        SI confirmacion
4.1.1       pedido.estado = 'LISTO_PARA_ENVIAR'
4.2.1       db_pedidos.actualizar_pedido(pedido)
5.1.1       ENVIAR order_id A **envío y seguimiento**
        SINO
            generar nota credito
            responder al cliente
            





