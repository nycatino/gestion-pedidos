Recepción del pedido

Algoritmo
1. Verificar precondiciones
2. Generar picking_list.
3. Confirmar stock real
4. Actualizar pedido
5. Enviar respuesta

Nivel 1
1. 1 Hallar pedido
1. 2 Verificar verificacion y estado 
2. 1 Generar picking list
3. 1 Confirmar stock real
    3.1.1 SI stosk es suficiente
        estado: 'LISTO_PARA_ENVIAR'
        4. 1 Responder envio y seguimiento
    3.1.2 SI NO
        estado: "RECHAZADO"
        4. 2 Responder cliente
5. 1 Guardar pedido


Nivel 2
1.1.1 Hallar pedido
1.2.1 Si verificar verficacion.status != OK o pedido.estado != PAGO_APROBADO
    1.2.2 Retornar ERROR
2.1.1 Declarar array picking_list
2.1.2 Por cada item del pedido
    2.1.3 Obtener ubicacion de item
    2.1.4 Agregar al picking_list
3.1.1 Confirmar stock real
3.1.1 SI stosk es suficiente
        estado: 'LISTO_PARA_ENVIAR'
        4. 1 Responder envio y seguimiento
    3.1.2 SI NO
        estado: "RECHAZADO"
        4. 2 Responder cliente
5. 1 Guardar pedido

Pseudocódigo
FUNCTION preparar_pedido(order_id):
1.1.1    pedido = db_pedidos.obtener_pedido(order_id)
1.2.1    IF  pedido.estado != 'PAGO_APROBADO':
1.2.2        RETURN ERROR "Precondiciones no cumplidas"

2.1.1    picking_list = []
2.1.2    FOR item IN pedido.items:
2.1.3        ubicacion = db_inventario.obtener_ubicacion_sku(item.sku)
2.1.4        picking_list.append({'sku': item.sku, 'cantidad': item.cantidad, 'ubicacion': ubicacion})
3.1.1    confirmacion = simular_confirmacion(picking_list)
        SI confirmacion
            pedido.estado = 'LISTO_PARA_ENVIAR'
4.1         RESPONDER al envio y seguimiento
3.1.2   SINO
            pedido.estado = 'RECHAZADO'
            generar nota credito
4.2         RESPONDER al cliente
            
5.1       db_pedidos.actualizar_pedido(pedido)




